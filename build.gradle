/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'


    id 'org.openjfx.javafxplugin' version '0.0.8'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    maven{
        url 'https://oss.sonatype.org/content/repositories/snapshots/'

    }
}

dependencies {
    compile group: 'org.fxmisc.richtext', name: 'richtextfx', version: '1.0.0-SNAPSHOT'
    compile group: 'io.netty', name: 'netty-all', version: '4.0.4.Final'
    compile group: 'com.esotericsoftware', name: 'kryonet', version: '2.22.0-RC1'


    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.13.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.1'
    compile 'com.jfoenix:jfoenix:9.0.8'
    
    // This dependency is used by the application.
    implementation 'com.github.seancfoley:ipaddress:5.2.1'
    implementation 'com.google.guava:guava:28.1-jre'

    // Use TestNG framework, also requires calling test.useTestNG() below
    testImplementation 'org.testng:testng:7.0.0'

}

application {
    // Define the main class for the application.
    mainClassName = 'org.usfirst.frc.team5740.Main'
}
javafx {
    version = '12'
    modules = [ 'javafx.controls', 'javafx.fxml','javafx.base','javafx.graphics' ]
}
